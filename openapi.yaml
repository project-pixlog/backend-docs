openapi: "3.0.3"

components:
  parameters:
    reportId:
      name: reportId
      in: path
      required: true
      description: |
        Identificador único do relatório.
      schema:
        type: string
        format: nanoid
    page:
      name: page
      in: query
      description: |
        Número da página desejada para os resultados.
        Utilize esse parâmetro para especificar o número da página que deseja obter.
      required: false
      schema:
        type: integer
        format: int32
        default: 1
    perPage:
      name: perPage
      in: query
      description: |
        Número de itens por página.
        Utilize esse parâmetro para especificar o número de itens que deseja obter por página.
      required: false
      schema:
        type: integer
        format: int32
        default: 25
    query:
      name: query
      in: query
      description: |
        Filtro de busca.
        Utilize esse parâmetro para especificar um filtro de busca.
      required: false
      schema:
        type: string
        default: ""
    sortBy:
      name: sortBy
      in: query
      description: |
        Ordenação dos resultados.
        Utilize esse parâmetro para especificar um campo para ordenação dos resultados.
      required: false
      schema:
        type: string
        default: createdAt
    sortOrder:
      name: sortOrder
      in: query
      description: |
        Direção da ordenação.
        Utilize esse parâmetro para especificar a direção da ordenação dos resultados.
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc

  securitySchemes:
    accessToken:
      type: apiKey
      in: header
      name: token

  schemas:
    # Requests and responses
    postV1Users:
      type: object
      required:
        - UserAccount
      properties:
        User:
          type: object
          properties:
            name:
              description: Nome do usuário.
              type: string
            enterprise_name:
              description: Nome da empresa.
              type: string
            phone:
              description: Telefone do usuário.
              type: string
              format: phoneNumber
            doc:
              description: CPF ou CNPJ do usuário.
              type: string
            email_address:
              description: E-mail do usuário.
              type: string
              format: email
            password:
              description: Senha do usuário.
              type: string
            physical_address:
              type: object
              properties:
                level2long:
                  description: Cidade do usuário.
                  type: string
    postV1Scans:
      type: object
      required:
        - Report
      properties:
        Report:
          type: array
          uniqueItems: true
          items:
            type: object
            required:
              - scan_result
              - original_creation_date
            properties:
              reportId:
                description: ID do relatório.
                type: string
                format: nanoid
              operatorId:
                description: ID do operador.
                type: string
                format: nanoid
              purchaserId:
                description: ID do comprador.
                type: string
                format: nanoid
              additionalInformation:
                description: Informações adicionais do relatório.
                type: string
              originalTimezone:
                description: Fuso horário original de quando o relatório foi criado.
                type: string
              originalCreationDate:
                description: Data original de quando o relatório foi criado.
                type: string
                format: date-time
              appVersion:
                description: Versão do aplicativo que gerou o relatório.
                type: string
              device:
                description: Modelo do dispositivo que gerou o relatório.
                type: string
              durationInSec:
                description: Duração da medição em segundos.
                type: integer
              latitude:
                description: Latitude da medição.
                type: number
                format: float
                minimum: -90
                maximum: 90
              longitude:
                description: Longitude da medição.
                type: number
                format: float
                minimum: -180
                maximum: 180
              volume:
                description: Volume detectado na medição.
                type: number
                format: float
              volumeFormula:
                description: Fórmula utilizada para calcular o volume.
                type: string
                example: "cilíndrica"
              specieFound:
                description: Espécie da madeira medida.
                type: string
              length:
                description: Comprimento da pilha de madeira medida.
                type: number
                format: float
              sortingMin:
                description: Valor mínimo de classificação.
                type: number
                format: float
              sortingMax:
                description: Valor máximo de classificação.
                type: number
                format: float
              usedSettings:
                description: Configurações utilizadas para gerar o relatório.
                type: object
                properties:
                  diameter_factor:
                    type: number
                    format: float
                  volume_factor:
                    type: number
                    format: float
              woodLogs:
                type: array
                items:
                  type: object
                  required:
                    - width
                    - height
                    - confiability
                  properties:
                    logId:
                      description: Id da tora.
                      type: string
                    confiability:
                      description: Grau de confiabilidade da medição do diâmetro.
                      type: integer
                      format: float
                    height:
                      description: Altura do diâmetro medido.
                      type: integer
                      format: float
                    width:
                      description: Largura do diâmetro medido.
                      type: integer
                      format: float
                    positionX:
                      description: Posição X do diâmetro medido.
                      type: integer
                      format: float
                    positionY:
                      description: Posição Y do diâmetro medido.
                      type: integer
                      format: float
    postV1Groups:
      type: object
      properties:
        Group:
          type: array
          uniqueItems: true
          items:
            type: object
            properties:
              appVersion:
                description: Versão do aplicativo que gerou o relatório.
                type: string
              device:
                description: Modelo do dispositivo que gerou o relatório.
                type: string
              additionalInformation:
                description: Informações adicionais do relatório.
                type: string
              originalTimezone:
                description: Fuso horário original de quando o relatório foi criado.
                type: string
              originalCreationDate:
                description: Data original de quando o relatório foi criado.
                type: string
                format: date-time
              scans:
                description: Relatórios de escaneamento.
                type: array
                uniqueItems: true
                items:
                  type: object
                  required:
                    - scanId
                  properties:
                    scanId:
                      $ref: "#/components/schemas/Scans/properties/Scans/items/properties/reportId"

    # Models
    Scans:
      type: object
      required:
        - Report
      properties:
        Scans:
          type: array
          uniqueItems: true
          items:
            type: object
            required:
              - scan_result
              - original_creation_date
            properties:
              reportId:
                description: ID do relatório.
                type: string
                format: nanoid
              operatorId:
                description: ID do operador.
                type: string
                format: nanoid
              purchaserId:
                description: ID do comprador.
                type: string
                format: nanoid
              status:
                description: Status do relatório.
                type: string
                enum:
                  - active
                  - deleted
              additionalInformation:
                description: Informações adicionais do relatório.
                type: string
              originalTimezone:
                description: Fuso horário original de quando o relatório foi criado.
                type: string
              originalCreationDate:
                description: Data original de quando o relatório foi criado.
                type: string
                format: date-time
              appVersion:
                description: Versão do aplicativo que gerou o relatório.
                type: string
              device:
                description: Modelo do dispositivo que gerou o relatório.
                type: string
              durationInSec:
                description: Duração da medição em segundos.
                type: integer
              latitude:
                description: Latitude da medição.
                type: number
                format: float
                minimum: -90
                maximum: 90
              longitude:
                description: Longitude da medição.
                type: number
                format: float
                minimum: -180
                maximum: 180
              volume:
                description: Volume detectado na medição.
                type: number
                format: float
              volumeFormula:
                description: Fórmula utilizada para calcular o volume.
                type: string
                example: "cilíndrica"
              specieFound:
                description: Espécie da madeira medida.
                type: string
              length:
                description: Comprimento da pilha de madeira medida.
                type: number
                format: float
              sortingMin:
                description: Valor mínimo de classificação.
                type: number
                format: float
              sortingMax:
                description: Valor máximo de classificação.
                type: number
                format: float
              usedSettings:
                description: Configurações utilizadas para gerar o relatório.
                type: object
                properties:
                  diameter_factor:
                    type: number
                    format: float
                  volume_factor:
                    type: number
                    format: float
              woodLogs:
                type: array
                items:
                  type: object
                  required:
                    - width
                    - height
                    - confiability
                  properties:
                    logId:
                      description: Id da tora.
                      type: string
                    confiability:
                      description: Grau de confiabilidade da medição do diâmetro.
                      type: integer
                      format: float
                    height:
                      description: Altura do diâmetro medido.
                      type: integer
                      format: float
                    width:
                      description: Largura do diâmetro medido.
                      type: integer
                      format: float
                    positionX:
                      description: Posição X do diâmetro medido.
                      type: integer
                      format: float
                    positionY:
                      description: Posição Y do diâmetro medido.
                      type: integer
                      format: float
    Scan::Summary:
      type: array
      uniqueItems: true
      items:
        properties:
          scanId: 
            $ref: "#/components/schemas/Scans/properties/Scans/items/properties/reportId"
          operatorId:
            $ref: "#/components/schemas/Scans/properties/Scans/items/properties/operatorId"
          purchaserId:
            $ref: "#/components/schemas/Scans/properties/Scans/items/properties/purchaserId"
          status:
            $ref: "#/components/schemas/Scans/properties/Scans/items/properties/status"

      

    Group:
      type: object
      properties:
        Group:
          type: array
          uniqueItems: true
          items:
            type: object
            properties:
              reportId:
                description: Identificador único do relatório de escaneamento.
                type: string
                format: nanoid
              operatorId:
                description: Identificador único do operador.
                type: string
                format: nanoid
              purchaserId:
                description: Identificador único do comprador.
                type: string
                format: nanoid
              status:
                description: Status do relatório.
                type: string
                enum:
                  - active
                  - deleted
              appVersion:
                description: Versão do aplicativo que gerou o relatório.
                type: string
              device:
                description: Modelo do dispositivo que gerou o relatório.
                type: string
              counter:
                description: Contador de relatórios.
                type: integer
              additionalInformation:
                description: Informações adicionais do relatório.
                type: string
              originalTimezone:
                description: Fuso horário original de quando o relatório foi criado.
                type: string
              originalCreationDate:
                description: Data original de quando o relatório foi criado.
                type: string
                format: date-time
              createdAt:
                description: Data de criação do relatório.
                type: string
                format: date-time
              usedSettings:
                description: Configurações utilizadas para gerar o relatório.
                type: object
                properties:
                  diameterFactor:
                    type: number
                    format: float
                  volumeFactor:
                    type: number
                    format: float
              scans:
                $ref: "#/components/schemas/Scan::Summary"

    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              details:
                type: string
    postV2Auth:
      type: object
      properties:
        email_address:
          type: string
          format: email
          description: E-mail do usuário.
        password:
          type: string
          description: Senha do usuário.
    
    postV2VerifyEmail:
      type: object
      properties:
        email_address:
          type: string
          format: email
          description: E-mail do usuário.
    
    UserAccount:
      type: object
      properties:
        UserAccount:
          type: object
          properties:
            userId:
              type: string
              format: nanoid
              description: ID do usuário.
            name:
              type: string
              description: Nome do usuário.
            enterprise_name:
              type: string
              description: Nome da empresa.
            phone:
              type: string
              format: phoneNumber
              description: Telefone do usuário.
            doc:
              type: string
              description: CPF ou CNPJ do usuário.
            email_address:
              type: string
              format: email
              description: E-mail do usuário.
            physical_address:
              type: object
              properties:
                level2long:
                  type: string
                  description: Cidade do usuário.
            created_at:
              type: string
              format: date-time
              description: Data de criação do usuário.
            updated_at:
              type: string
              format: date-time
              description: Data de atualização do usuário.
    ReportTypes:
      type: object
      properties:
        ReportTypes:
          type: array
          items:
            type: object
            properties:
              reportTypeId:
                type: string
                description: Tipo do relatório.
              name:
                type: string
                description: Nome do relatório disponível.

security:
  - accessToken: []

info:
  title: Main API
  version: "v2.0.0"
  description: | 
    A API é responsável por gerenciar o armazenamento de informações do 'usuário, relatórios e pagamentos. O sistema é 
    projetado para ser usado em conjunto com um aplicativo que faz uso da tecnologia de realidade aumentada para medir e
    gerar informações. A API se comunica com um banco de dados MariaDB para armazenar e recuperar as informações do sistema.
  contact:
    name: Bruno Gonçalves Aquino
    email: bruno@pixlog.com.br

servers:
  - url: http://localhost:3000/v1
    description: Servidor local

tags:
  - name: Usuários
    description: Gerenciamento de usuários, incluindo cadastro, atualização, busca e exclusão.
  - name: Autenticação
    description: Autenticação de usuários, como login, logout, geração e renovação de tokens de acesso.
  - name: Relatórios de Escaneamento
    description: Geração de relatórios de escaneamento, contendo informações sobre análises, auditorias ou inspeções realizadas na aplicação.
  - name: Grupos de Relatórios
    description: Gerenciamento de grupos de relatórios.
  - name: Pagamentos
    description: Processamento de pagamentos, incluindo transações financeiras, histórico de pagamentos e informações de faturamento.
  - name: Feedbacks
    description: Coleta de feedbacks dos usuários, permitindo que expressem suas opiniões, sugestões ou problemas relacionados à aplicação.
  - name: Notificações por E-mail
    description: Envio de notificações por e-mail, como confirmações, alertas ou comunicações importantes para os usuários.
  - name: Debug
    description: Recursos de depuração da API, usados principalmente para diagnosticar problemas e identificar erros no sistema.
  - name: Arquivos Estáticos
    description: Acesso e gerenciamento de arquivos estáticos, como imagens, folhas de estilo e scripts.
  - name: Monitoramento da API
    description: Monitoramento e métricas da API, fornecendo informações sobre desempenho, disponibilidade e uso da API.
  - name: Relatórios Disponíveis
    description: Informações sobre os diferentes tipos de relatórios disponíveis no sistema.

paths:
  /auth:
    post:
      summary: Autentica um usuário.
      description: Autentica um usuário.
      operationId: login
      tags:
        - "Autenticação"
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV2Auth"

      responses:
        200:
          description: Autenticação realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: responses/postV1Auth.yaml
              example:
                accessToken: |
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWRfcmVnaXN0cmF0aW9uX2RhdGEiOiJNLXZEc0wzbENzcEU1aFk1bVZaMGwiLCJl
                  bWFpbCI6InBpeGxvZ3Rlc3RpbmdAcGl4bG9nLmNvbS5iciIsIm5hbWUiOiJUaGUgUGl4bG9nIERldmVsb3BlciIsImlhdCI6MTY5MTA3N
                  DI0NywiZXhwIjoxNjkxMDc0NTQ3fQ.tCicFel8dGr1jn13nTL1jWtwBXqxhsaJcY4FUA3Amas
                refreshToken: |
                  qKRNt6Rdv1gUMXqLuU4Khz0x0ewcO0EkSsIZqIo0BR4aPEtOlmN3T32iPOTh5PuBnKfI2gxofn2sPYSsFel1JahB2uzZqvKveYZVTVYiWL
                  XjFoBDvhh0sXtEHGZabwYWkdA0u8e7xDkNdvui4nLUMQbv7AFx313dyR2rR8nusYisHwGdEGR5YSChIdAplvE2zQcXrNRCDYBr71IRIXmS
                  X5ALqEjq380ALrbdxT1d0bJ46h5wXlAzBLygvgqEaQ21
        400:
          $ref: responses/default/BadRequestError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /refreshToken:
    post:
      summary: Gera um novo token de acesso.
      description: Gera um novo token de acesso.
      operationId: refreshToken
      tags:
        - "Autenticação"
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/postV1RefreshAccessToken.yaml
      responses:
        200:
          description: Token de acesso gerado com sucesso.
          content:
            application/json:
              schema:
                $ref: responses/postV1RefreshAccessToken.yaml
        400:
          $ref: responses/default/BadRequestError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /signout:
    post:
      summary: Efetua logout.
      description: |
        Encerra a sessão de um dispositivo específico ou de todos os dispositivos associados a uma conta de usuário.
      operationId: signout
      tags:
        - "Autenticação"
      parameters:
        - $ref: parameters/query/all.yaml
      responses:
        200:
          description: Operação realizada com sucesso.
        400:
          $ref: responses/default/BadRequestError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /verifyEmail:
    post:
      summary: Verifica se o e-mail já está cadastrado
      description: Verifica se o e-mail já está cadastrado.
      operationId: verifyEmail
      tags:
        - "Usuários"
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV2VerifyEmail"
            example:
              email_address: pixlogtesting@pixlog.com.br
      responses:
        200:
          description: E-mail disponível para cadastro.
        400:
          $ref: responses/default/BadRequestError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /users:
    post:
      summary: Cadastra um novo usuário.
      description: |
        ## Descrição

        Utilize esta função para criar novas contas de usuário. Essa conta pode representar uma pessoa física ou jurídica que possui uma ou mais assinaturas.
      operationId: createUser
      tags:
        - "Usuários"
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Users"

      responses:
        201:
          description: Ok. Usuário criado com sucesso.
        400:
          $ref: responses/default/BadRequestError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /users/current:
    get:
      summary: Consultar detalhes do usuário
      description: Esta operação retorna informações detalhadas do usuário atual.
      operationId: getCurrentUser
      tags:
        - "Usuários"
      responses:
        200:
          description: Consulta realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccount"

        400:
          $ref: responses/default/BadRequestError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml
  #   put:
  #     summary: Atualiza informações do usuário
  #     description: Atualiza informações do usuário.
  #     operationId: updateUser
  #     tags:
  #       - "Usuários"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/User.yaml
  #     responses:
  #       200:
  #         description: Usuário atualizado com sucesso.
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #               example: Ok
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  #   delete:
  #     summary: Desativa conta do usuário
  #     description: Desativa conta do usuário.
  #     operationId: deleteUser
  #     tags:
  #       - "Usuários"
  #     responses:
  #       200:
  #         $ref: responses/default/Ok.yaml
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       404:
  #         $ref: responses/default/NotFoundError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /confirmEmail:
  #   post:
  #     summary: Confirma e-mail do usuário com token de confirmação
  #     description: Confirma e-mail do usuário com token de confirmação.
  #     operationId: confirmEmail
  #     tags:
  #       - "Usuários"
  #     security: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1ConfirmEmail.yaml
  #     responses:
  #       200:
  #         description: E-mail confirmado com sucesso.
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #               example: Ok
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       404:
  #         $ref: responses/default/NotFoundError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /generateConfirmEmailToken:
  #   post:
  #     summary: Gera um novo token de confirmação de e-mail
  #     description: Gera um novo token de confirmação de e-mail.
  #     operationId: generateConfirmEmailToken
  #     tags:
  #       - "Usuários"
  #     security: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1GenerateConfirmEmailToken.yaml
  #     responses:
  #       200:
  #         description: Operação realizada com sucesso.
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #               example: Ok
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       404:
  #         $ref: responses/default/NotFoundError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /generateResetPasswordToken:
  #   post:
  #     summary: Gera um novo token de recuperação de senha
  #     description: Gera um novo token de recuperação de senha.
  #     operationId: generateResetPasswordToken
  #     tags:
  #       - "Usuários"
  #     security: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1GenerateResetPasswordToken.yaml
  #     responses:
  #       200:
  #         description: Operação realizada com sucesso.
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #               example: Ok
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       404:
  #         $ref: responses/default/NotFoundError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /validateResetPasswordToken:
  #   post:
  #     summary: Valida um token de recuperação de senha
  #     description: Valida um token de recuperação de senha.
  #     operationId: validateResetPasswordToken
  #     tags:
  #       - "Usuários"
  #     security: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1ValidateResetPasswordToken.yaml
  #     responses:
  #       200:
  #         description: Token válido.
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #               example: Ok
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       404:
  #         $ref: responses/default/NotFoundError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /changePasswordWithToken:
  #   patch:
  #     summary: Altera senha com o token de recuperação de senha
  #     description: Altera senha com token de recuperação de senha.
  #     operationId: changePasswordWithToken
  #     tags:
  #       - "Usuários"
  #     security: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/patchV1ChangePasswordWithToken.yaml
  #     responses:
  #       200:
  #         description: Senha alterada com sucesso.
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #               example: Ok
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /changePasswordUsingCurrent:
  #   patch:
  #     summary: Altera senha com a senha atual
  #     description: Altera senha com a senha atual.
  #     operationId: changePasswordUsingCurrent
  #     tags:
  #       - "Usuários"
  #     security: []
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/patchV1ChangePasswordUsingCurrent.yaml
  #     responses:
  #       200:
  #         description: Senha alterada com sucesso.
  #         content:
  #           text/plain:
  #             schema:
  #               type: string
  #               example: Ok
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml

  /scans:
    post:
      summary: Cria um novo relatório de escaneamento.
      description: Cria um novo relatório de escaneamento.
      operationId: createReport
      tags:
        - "Relatórios de Escaneamento"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Scans"
      responses:
        201:
          description: Relatório de escaneamento criado com sucesso.
        422:
          $ref: responses/default/UnprocessableEntityError.yaml
    get:
      summary: Obter lista de relatórios de escaneamento
      description: |
        ## Descrição

        Esta rota retorna uma lista dos relatórios de escaneamento disponíveis no sistema.
        Esses relatórios contêm informações detalhadas sobre os resultados dos escaneamentos
        realizados. Utilize esta rota para acessar e visualizar os dados dos escaneamentos 
        de forma fácil e organizada.

        ## Atributos para busca

        <code>reportId</code> <code>operatorId</code> <code>purchaserId</code> <code>reportType</code> <code>appVersion</code> <code>scarfVersion</code> <code>createdAt</code> <code>device</code>

        ## Segurança

        Dependendo da sua permissão de acesso, você pode visualizar apenas os relatórios de escaneamento que você criou ou todos os relatórios de escaneamento criados por qualquer usuário da sua empresa.
      operationId: getScans
      tags:
        - "Relatórios de Escaneamento"
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/sortBy"
        - $ref: "#/components/parameters/sortOrder"
      responses:
        200:
          description: Consulta realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scans"
        404:
          $ref: responses/default/NotFoundError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /scans/{scanId}:
    get:
      summary: Retorna um relatório de escaneamento específico através do ID.
      description: |
        ## Descrição

        Esta rota retorna um relatório de escaneamento específico com base no ID fornecido.
      operationId: getScanById
      tags:
        - "Relatórios de Escaneamento"
      parameters:
        - $ref: parameters/path/reportId.yaml
      responses:
        200:
          description: Relatório encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postV1Scans"
        400:
          $ref: responses/default/BadRequestError.yaml
        404:
          $ref: responses/default/NotFoundError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /groups:
    post:
      summary: Agrupar relatórios de escaneamento.
      description: |
        ## Descrição

        Utilize esta função para agrupar relatórios de escaneamento.

      operationId: groupScans
      tags:
        - "Grupos de Relatórios"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postV1Groups"
      responses:
        201:
          description: Grupo de relatórios criado com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        400:
          $ref: responses/default/BadRequestError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml
    get:
      summary: Retorna uma lista de relatórios gerais.
      description: |
        ## Descrição

        Esta rota retorna uma lista dos groups de relatórios disponíveis no sistema.

        ## Atributos para busca

        <code>reportId</code> <code>operatorId</code> <code>appVersion</code>
        <code>scarfVersion</code> <code>createdAt</code> <code>device</code>
        <code>originalCreationDate</code> <code>originalTimezone</code>
        <code>counter</code>

        ## Segurança

        Dependendo da sua permissão de acesso, você pode visualizar apenas os relatórios de escaneamento que você criou ou todos os relatórios de escaneamento criados por qualquer usuário da sua empresa.

        ## Relatórios do grupo

        Para visualizar os relatórios de escaneamento de um grupo com todas as informações completas, é necessário utilizar a rota <code>GET /groups/{groupId}/reports</code>.
      operationId: getGroup
      tags:
        - "Grupos de Relatórios"
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/perPage"
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/sortBy"
        - $ref: "#/components/parameters/sortOrder"
      responses:
        200:
          description: Consulta realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        400:
          $ref: responses/default/NotFoundError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /groups/{groupId}/reports:
    get:
      summary: Retorna uma lista de relatórios de escaneamento de um relatório geral.
      description: Retorna uma lista de relatórios de escaneamento de um relatório geral.
      operationId: getReportByGroupId
      tags:
        - "Grupos de Relatórios"
      responses:
        200:
          description: Consulta realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/postV1Scans"
        400:
          $ref: responses/default/NotFoundError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  /groups/{groupId}:
    get:
      summary: Retorna um relatório geral específico através do ID
      description: Retorna um relatório geral específico através do ID.
      operationId: getGroupReportById
      tags:
        - "Grupos de Relatórios"
      parameters:
        - $ref: parameters/path/mergedId.yaml
      responses:
        200:
          description: Relatório geral encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Group"
        400:
          $ref: responses/default/BadRequestError.yaml
        404:
          $ref: responses/default/NotFoundError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml

  # Payment endpoints
  # /payment:
  #   post:
  #     summary: Cria um novo pagamento
  #     description: Cria um novo pagamento.
  #     operationId: createPayment
  #     tags:
  #       - "payments: Pagamentos"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1CreatePayment.yaml
  #     responses:
  #       201:
  #         description: Payment created
  #         content:
  #           plain/text:
  #             schema:
  #               type: string
  #               example: "Ok"
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  #   get:
  #     summary: Retorna uma lista de pagamentos
  #     description: Retorna uma lista de pagamentos.
  #     operationId: getPayments
  #     tags:
  #       - "payments: Pagamentos"
  #     parameters:
  #       - $ref: parameters/query/init.yaml
  #       - $ref: parameters/query/end.yaml
  #       - $ref: parameters/query/limit.yaml
  #     responses:
  #       200:
  #         description: Consulta realizada com sucesso.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: schemas/getV1ListPayments.yaml
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       404:
  #         $ref: responses/default/NotFoundError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /payment/{paymentId}:
  #   get:
  #     summary: Retorna um pagamento específico através do ID
  #     description: Retorna um pagamento específico através do ID.
  #     operationId: getPaymentById
  #     tags:
  #       - "payments: Pagamentos"
  #     parameters:
  #       - $ref: parameters/path/paymentId.yaml
  #     responses:
  #       200:
  #         description: Pagamento encontrado.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: schemas/getV1GetPaymentById.yaml
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       404:
  #         $ref: responses/default/NotFoundError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # /startTrial:
  #   post:
  #     summary: Inicia um período de teste
  #     description: Inicia um período de teste.
  #     operationId: startTrial
  #     tags:
  #       - "payments: Pagamentos"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1StartTrial.yaml
  #     responses:
  #       200:
  #         description: Operação realizada com sucesso.
  #         content:
  #           plain/text:
  #             schema:
  #               type: string
  #               example: "Ok"
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml

  # # Feedback endpoints
  # /feedback:
  #   post:
  #     summary: Cria um novo feedback
  #     description: Cria um novo feedback.
  #     operationId: createFeedback
  #     tags:
  #       - "feedbacks: Feedbacks"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1CreateFeedback.yaml
  #     responses:
  #       201:
  #         description: Feedback criado com sucesso.
  #         content:
  #           plain/text:
  #             schema:
  #               type: string
  #               example: "Ok"
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml

  # # Notifications endpoints
  # /sendFile:
  #   post:
  #     summary: Envia arquivos para um usuário
  #     description: Envia arquivos para um usuário.
  #     operationId: sendFile
  #     tags:
  #       - "notifications: Notificações"
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: schemas/postV1SendFile.yaml
  #     responses:
  #       200:
  #         description: Operação realizada com sucesso.
  #         content:
  #           plain/text:
  #             schema:
  #               type: string
  #               example: "Ok"
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml
  # # Debug
  # /debug:
  #   post:
  #     summary: Envia um arquivo de debug do Scarf.
  #     description: Envia um arquivo de debug do Scarf.
  #     operationId: sendDebug
  #     tags:
  #       - "debug: Debug"
  #     responses:
  #       200:
  #         description: Operação realizada com sucesso.
  #         content:
  #           plain/text:
  #             schema:
  #               type: string
  #               example: "Ok"
  #       400:
  #         $ref: responses/default/BadRequestError.yaml
  #       422:
  #         $ref: responses/default/UnprocessableEntityError.yaml

  # # Statistics endpoints
  # /statics:
  #   get:
  #     summary: Retorna arquivo estático
  #     description: Retorna arquivo estático.
  #     operationId: getStatic
  #     tags:
  #       - "static: Arquivos estáticos"
  #     responses:
  #       200:
  #         description: Consulta realizada com sucesso.
  #       404:
  #         $ref: responses/default/NotFoundError.yaml

  /monitoring/healthcheck:
    get:
      summary: Verifica se o servidor está online.
      description: Verifica se o servidor está online.
      operationId: healthcheck
      tags:
        - "Monitoramento da API"
      security: []
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                $ref: schemas/getHealthCheck.yaml
        503:
          description: Servidor offline.

  /reportTypes:
    get:
      summary: Obter lista de tipos de relatórios.
      description: |
        Essa função retorna uma lista dos diferentes tipos de relatórios disponíveis para consulta.
      operationId: getReportTypes
      tags:
        - "Relatórios Disponíveis"
      responses:
        200:
          description: Consulta realizada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReportTypes"
        404:
          $ref: responses/default/NotFoundError.yaml
        422:
          $ref: responses/default/UnprocessableEntityError.yaml